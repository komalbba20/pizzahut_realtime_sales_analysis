SELECT * FROM pizzahut.pizzas;
-- count the number of orders
select count(order_id) from orders;
-- identify the pizza having maximum price
select pizza_types.name, pizzas.price from pizza_types join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id order by pizzas.price desc limit 1;
/*identify most common size pizza ordered */
select pizzas.size, count(order_details.order_details_id) as order_count FROM pizzas join order_details on pizzas.pizza_id = order_details.pizza_id group by pizzas.size order by order_count desc;
-- list top 5 most common pizza types with their quantity
select pizza_types.name, sum(order_details.quantity) as quantity_count from pizza_types join pizzas on pizza_types.pizza_type_id = pizzas.pizza_type_id join order_details on pizzas.pizza_id = order_details.pizza_id group by pizza_types.name order by quantity_count desc limit 5;
-- find the total qunantity of each pizza quantity ordered
SELECT 
    pizza_types.category,
    SUM(order_details.quantity) AS quantity_count
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON pizzas.pizza_id = order_details.pizza_id
GROUP BY pizza_types.category
ORDER BY quantity_count DESC;
-- Determine the distribution of orders by hour of the day
select hour(order_time), count(order_id) from orders group by hour(orders.order_time) order by count(orders.order_id) desc;
-- join relevant table to show category wise distribution of pizzas
select category,Count(pizza_type_id) from pizza_types group by category;
-- group the order by date and calculate the average number of pizzas ordered per day
select avg(quantity) from (Select sum(order_details.quantity) as quantity, orders.order_date from order_details join orders on orders.order_id=order_details.order_id group by orders.order_date) as order_quantity;
-- Determine the top 3 most ordered pizza types based on revenue
select pizza_types.name, sum(order_details.quantity) as quantities, round(sum(order_details.quantity*pizzas.price),0) as revenue from pizza_types join pizzas on pizza_types.pizza_type_id=pizzas.pizza_type_id join order_details on order_details.pizza_id=pizzas.pizza_id group by pizza_types.name order by revenue desc limit 3;
-- calculate the percentage contribution of each pizza type to total revenue

-- analyze the cumulative revenue generated over time
select order_date, sum(revenue) over(order by order_date) as cumulative_revenue from (select orders.order_date, round(sum(order_details.quantity*pizzas.price),0) as revenue from orders join order_details on orders.order_id=order_details.order_id join pizzas on order_details.pizza_id=pizzas.pizza_id group by order_date) as sales;
-- determine the top 3 most ordered pizza types based on revenue for each pizza category
select category,name, revenue from (select category,name, revenue, rank() over(partition by category order by revenue desc) as rn from (select pizza_types.category, pizza_types.name, sum(order_details.quantity*pizzas.price) as revenue from pizza_types join pizzas on pizza_types.pizza_type_id=pizzas.pizza_type_id join order_details on order_details.pizza_id=pizzas.pizza_id group by pizza_types.category, pizza_types.name)as a) as b where rn<=3;
